You are an expert in annotating NLP datasets for event extraction.Your task is to generate precise and detailed annotation guidelines for the event type Artifact which is a child event type of super class ManufactureEvent

### Input Format ###
```
Event Schema:
Event Name and its parent class
Arguments:
Arguments separated by new lines. If there are no arguments None will be given.

Examples:
Examples provided to illustrate the event type and arguments.
```

### Instructions ###
1. Identify and List All Unique Arguments: 
   - Carefully review the schema to identify all arguments relevant to the event type.
   - Please remember that the examples may not cover all the arguments in the list. In some cases, you may not have arguments at all, in such cases, you can have an empty list for arguments. 
2. Define the Event Type: Write 5 clear and specific definitions, starting with "The event is triggered by ...":
   - Include example triggers.
   - Highlight key characteristics and scope of the event.
   - Compare and contrast with closely related events using provided negative examples.
   - Explain how triggers and outcomes differ for similar event types.
3. Define Each Argument:** For each argument, provide 5 definitions with detailed examples, starting with "Examples are ...":
   - Explain the role and importance of each argument.
   - Include domain knowledge and address edge cases to clarify ambiguities.
4. Focus on Distinctions: Use positive examples to describe the event, and negative examples to clarify what the event is not. Explicitly state differences using phrases like:
   - "Unlike [Related Event Type], this event does not ..."
   - "Triggers such as [Trigger] are indicative of [Related Event Type], not this event type."
5. Structured Output: Present the output in the following JSON format:
   ```json
   {
     "Event Definition": [
       "Definition 1",
       "Definition 2",
       "Definition 3",
       "Definition 4",
       "Definition 5"
     ],
     "Arguments Definitions": {
       "Argument1": [
         "Definition 1",
         "Definition 2",
         "Definition 3",
         "Definition 4",
         "Definition 5"
       ],
       "Argument2": [
         "Definition 1",
         "Definition 2",
         "Definition 3",
         "Definition 4",
         "Definition 5"
       ]
       // Add more arguments if applicable
     }
   }
   ```

### Output Requirements ###
- Use detailed yet concise language for event and argument definitions.
- Incorporate diverse and domain-relevant examples for each definition.
- Avoid copying examples directly from provided data, create unique variations.

Event Schema:
Artifact which is a child event type of super class ManufactureEvent
Arguments:
Argument 1 -> agent
Argument 2 -> artifact
Argument 3 -> place

### The below examples are positive examples, as they match the Event Type being annotated: ###

Example 1
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
In fact, lately in my country they've been building schools modularly so they can be turned into house when the families with young kids in the neighbourhood grow older and don't need them anymore.
### Event Trigger ###
building
### Event Arguments ###
For argument "artifact" extracted spans ['schools']
For argument "agent" extracted spans ['they']
For argument "place" extracted spans ['country']

Example 2
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
He respects Constitutional freedoms but sees possible harm to NYC should the full extent of those freedoms be exercised by building this Muslim complex.
### Event Trigger ###
building
### Event Arguments ###
For argument "artifact" extracted spans ['complex']

Example 3
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
He respects Constitutional freedoms but sees possible harm to NYC should the full extent of those freedoms be exercised by building this Muslim complex.
### Event Trigger ###
building
### Event Arguments ###
For argument "artifact" extracted spans ['complex']

Example 4
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
Diebold no longer makes voting machines.
### Event Trigger ###
makes
### Event Arguments ###

Example 5
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
The bigger part of Diebold's business, by far, is ATM machines.
### Event Trigger ###
business
### Event Arguments ###
For argument "agent" extracted spans ['Diebold']

Example 6
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
Diebold no longer makes voting machines.
### Event Trigger ###
makes
### Event Arguments ###
For argument "agent" extracted spans ['Diebold']

Example 7
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
The bigger part of Diebold's business, by far, is ATM machines.
### Event Trigger ###
business
### Event Arguments ###
For argument "agent" extracted spans ['Diebold']

Example 8
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
The district built a planetarium for this school, but those middle-class families wanted better test scores, not bright stars.
### Event Trigger ###
built
### Event Arguments ###
For argument "agent" extracted spans ['district']
For argument "artifact" extracted spans ['planetarium']

Example 9
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
Why would people bother to produce anything on time?
### Event Trigger ###
produce
### Event Arguments ###
For argument "agent" extracted spans ['people']

Example 10
#### Event Type ####
Artifact(ManufactureEvent)
### Input Text ###
It's ridiculous to see that cheap labour is being chosen over safety and security...not saying that India isn't but it's true what they say, you get what you pay for: CHEAP pharmaceutics production = low quality...
### Event Trigger ###
production
### Event Arguments ###

### The following examples are negative examples, as they illustrate different event types provided for contrast and differentiation: ###